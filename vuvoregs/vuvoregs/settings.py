"""Django settings for vuvoregs project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _
import environ

env = environ.Env(DEBUG=(bool, False))


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Read the .env file
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# SECURITY SETTINGS
# ------------------------------------------------------------------------------
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = ["*"]


# APPLICATION DEFINITION
# ------------------------------------------------------------------------------
INSTALLED_APPS = [
    # First-party apps
    "jazzmin",
    # Core Django apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",  # Required by allauth
    # Third-party packages
    "modeltranslation",
    "crispy_forms",
    "crispy_bootstrap5",
    "django_json_widget",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "payments",
    "cities_light",
    # Custom apps
    "accounts",
    "event.templatetags",
    "event",
    "dashboard",
]

# Site ID for django.contrib.sites
SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "vuvoregs.urls"

# Custom user model
AUTH_USER_MODEL = "accounts.User"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],  # Custom templates directory
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",  # Required by allauth
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "vuvoregs.wsgi.application"


# DATABASE CONFIGURATION
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# PASSWORD VALIDATION
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # noqa: E501
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# INTERNATIONALIZATION
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = "en"

LANGUAGES = [
    ("en", _("English")),
    ("el", _("Greek")),  # Add any other languages you need
]

USE_I18N = True
USE_L10N = True
USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR / "locale",  # this is where translations will live
]


# STATIC AND MEDIA FILES
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
# DEFAULT PRIMARY KEY FIELD TYPE
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# THIRD-PARTY PACKAGE SETTINGS
# ------------------------------------------------------------------------------
# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Jazzmin Admin Customization
JAZZMIN_SETTINGS = {
    "custom_links": {
        "event": [
            {
                "name": "Export Event Athletes",
                "url": "event_admin:export-athletes",  # New namespace
                "icon": "fas fa-download",
            },
            {
                "name": "Import Bib Numbers",
                "url": "event_admin:import-bibs",
                "icon": "fas fa-upload",
            },
        ]
    },
}


# DJANGO-ALLAUTH SETTINGS
# ------------------------------------------------------------------------------
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",  # Default Django auth backend
    "allauth.account.auth_backends.AuthenticationBackend",  # Allauth backend
]

# Account settings
ACCOUNT_LOGIN_METHODS = {"email"}  # Login using email
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_SIGNUP_FIELDS = ["email*", "password1*", "password2*"]

# Redirect URLs
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# DJANGO CITIES LIGHT SETTINGS
# ------------------------------------------------------------------------------
CITIES_LIGHT_TRANSLATION_LANGUAGES = ["en"]
CITIES_LIGHT_INCLUDE_COUNTRIES = ["GR"]  # Include only South Africa

# DJANGO PAYMENTS
# ------------------------------------------------------------------------------
PAYMENT_VARIANTS = {
    "viva": (
        "event.payments.smart_checkout.VivaSmartCheckoutProvider",
        {
            "merchant_id": env("VIVA_MERCHANT_ID"),
            "api_key": env("VIVA_API_KEY"),
            "client_id": env("VIVA_CLIENT_ID"),
            "client_secret": env("VIVA_CLIENT_SECRET"),
            "source_code": env("VIVA_SOURCE_CODE"),
            "sandbox": True,
        },
    ),
    "dummy": ("payments.dummy.DummyProvider", {}),
}
PAYMENT_MODEL = "event.Payment"
VIVA_WEBHOOK_VERIFICATION_KEY = env("VIVA_VERIFICATION_KEY")

# LOGGING
# ------------------------------------------------------------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
        "event": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": True,
        },
    },
}
